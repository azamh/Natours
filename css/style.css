/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*universal selector*/
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header{
    height: 95vh;
    background-image: linear-gradient(to right bottom,
        rgba(126, 213, 111, 0.8),
        rgba(40, 180, 131, 0.8)), 
        url(../img/hero.jpg);
    background-size: cover; /*always fit element in box*/
    background-position: top; /*always top of image stay at top of box when we change the image size*/
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* <https://bennettfeely.com/clippy */
    position: relative;
}

.logo-box{
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo{
    height: 35px;
}

/* .logo:hover {
    animation: moveInRight 1s ease-out;
} */

.text-box{
    position: absolute; /* best way to centralized the text*/
    /*top and left are related to parent element*/
    top: 40%;
    left: 50%;
    /*transform is related to element itself*/
    transform: translate(-50%, -50%);/*shift the box to the middle of header exactly*/
    text-align: center;

}

.heading-primary{
    color:#FFF;
    text-transform: uppercase;
    backface-visibility: hidden;/*back of the element will hidden and will fix animate shaking*/
    margin: 60px;
}

.heading-primary-main{
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    animation-name:  moveInLeft;
    animation-duration: 1s;
    /*
    animation-delay: 3s; /*waiting before start
    animation-iteration-count: 3;/*happen 3 times
    animation-timing-function: ease-out;/*start faster beginning and slower at end
    */
}

.heading-primary-sub{
    display: block;
    font-size: 20px;
    font-weight: 4700;
    letter-spacing: 17.4px;
    animation: moveInRight 1s ease-out;
}

@keyframes moveInRight{
    0%{ /*when animation start*/
        opacity: 0; /*we want it be hidden*/
        transform: translateX(100px); /*we want text animate move in x direction, from left to right*/
    }

    80%{/*one step in the middle of animation*/
        transform: translateX(-10px);/*we want the test go a bit to right and back to 0 again*/
    }

    100%{/*when animation end*/
        opacity: 1;
        transform: translate(0); /*we want to stay in the middle, where it is already*/
    }
}

@keyframes moveInLeft{
    0%{ /*when animation start*/
        opacity: 0; /*we want it be hidden*/
        transform: translateX(-100px); /*we want text animate move in x direction, from left to right*/
    }

    /* 60%{
        transform: rotate(180deg);
    } */

    80%{/*one step in the middle of animation*/
        transform: translateX(10px);/*we want the test go a bit to right and back to 0 again*/
    }

    100%{/*when animation end*/
        opacity: 1;
        transform: translate(0); /*we want to stay in the middle, where it is already*/
    }
}

/*link and visited are both initial state of a link*/
.btn:link,
.btn:visited {/*sudo class, help to style element, in special condition*/
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    /*now in visited condition*/
    /*all property will be able to animated*/
    transition: all .2s;/*short way to define animation without using @keyframes*/
    position: relative;
}

.btn:hover {
    transform: translateY(-3px);/*it goes up with hover*/
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
    transform: translateY(-1px);/*move to only 1 px up by one click*/
}

.btn-white{
    background-color: #fff;
    color: #777;
}

/*
The ::after pseudo-element can be used to insert some content after the content of an element.
*/
.btn::after {
    content: "";/*content is always necessary, it could be empty*/
    display: inline-block;/*should be same as btn, both are inline-block*/
    height: 100%;
    width: 100%;
    border-radius: 100px;/*should be same as btn, both are 100px*/
    position: absolute;/*reference is btn*/
    top: 0;
    left: 0;
    z-index: -1;/*define the position of element, -1 means definitely behind the btn*/
}

.btn-white::after {
    background-color: #fff;
}

.btn:hover::after {
    transform: scale(1.5);
}